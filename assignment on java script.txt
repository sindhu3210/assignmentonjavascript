//Project 1: Weather Forecast
Problem Statement:
You are tasked with creating a simple weather forecast application. The HTML and CSS for the application have been provided to you, and your job is to write the JavaScript code to fetch weather data from an open weather API and display it on the webpage. 


const apiKey = '5a98cee7b1f2840418b25a1f228d0b25';
const apiUrl = 'https://api.openweathermap.org/data/2.5/weather';
const city = 'Nandyal'; 

const weatherDataElement = document.querySelector('.weather-data');

async function fetchWeatherData() {
  try {
    const response = await fetch(`${apiUrl}?q=${city}&appid=${apiKey}&units=metric`);
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Error fetching weather data:', error);
    return null;
  }
}

function updateWeatherData(weather) {
  if (!weather) {
    weatherDataElement.innerHTML = 'Unable to fetch weather data';
    return;
  }

  const { name, weather: weatherInfo, main } = weather;
  const temperature = main.temp;
  const description = weatherInfo[0].description;

  const html = `
    <h2>${name} Weather</h2>
    <p>Temperature: ${temperature}Â°C</p>
    <p>Condition: ${description}</p>
  `;
  
  weatherDataElement.innerHTML = html;
}

fetchWeatherData()
  .then(updateWeatherData)
  .catch((error) => console.error('Error:', error));


//Project 2: Random Quote Generator
Problem Statement:
You have been assigned the task of building a random quote generator. The HTML and CSS have been provided, and you need to write the JavaScript code to fetch a random quote from a quotes API and display it on the webpage. 



const quoteElement = document.querySelector('.quote p');
const newQuoteButton = document.getElementById('new-quote-btn');


async function fetchRandomQuote() {
  try {
    const response = await fetch('https://type.fit/api/quotes');
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const quotes = await response.json();


    const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];

    return randomQuote.text;
  } catch (error) {
    console.error('Error fetching quote:', error);
    return "Error fetching quote!";
  }
}

async function updateQuote() {
  const quote = await fetchRandomQuote();
  quoteElement.textContent = quote;
}

newQuoteButton.addEventListener('click', updateQuote);

the page loads
updateQuote();



//Project 3: Country Information App 
Problem Statement:
You are required to build a simple country information app. The HTML and CSS have been provided, and your task is to write the JavaScript code to fetch country data from a countries API and display it on the webpage. 



const countryInfoElement = document.querySelector('.country-info');


async function fetchCountryData(countryName) {
  try {
    const response = await fetch(`https://restcountries.com/v3.1/name/${countryName}?fullText=true`);
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const [data] = await response.json();

    const {
      name: { common },
      capital,
      region,
      subregion,
      population,
      languages,
      flags: { svg }
    } = data;

    const mainLanguage = Object.values(languages)[0];

    return `
      <img src="${svg}" alt="Flag of ${common}" width="100">
      <h2>${common}</h2>
      <p>Capital: ${capital}</p>
      <p>Region: ${region}</p>
      <p>Subregion: ${subregion}</p>
      <p>Population: ${population.toLocaleString()}</p>
      <p>Main Language: ${mainLanguage}</p>
    `;
  } catch (error) {
    console.error('Error fetching country data:', error);
    return '<p>Error fetching country data!</p>';
  }
}


async function updateCountryInfo(countryName) {
  const countryInfo = await fetchCountryData(countryName);
  countryInfoElement.innerHTML = countryInfo;
}


updateCountryInfo('United States');


